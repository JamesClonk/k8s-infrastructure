#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")
#@ load("_ytt.lib.yml", "labels")

#@ if data.values.alertmanager.email.enabled:
  #@ if len(data.values.alertmanager.email.mail_from) == 0 or data.values.alertmanager.email.mail_from == "nobody@nobody":
  #@  assert.fail("alertmanager.email.mail_from is missing or invalid")
  #@ end
  #@ if len(data.values.alertmanager.email.mail_to) == 0 or data.values.alertmanager.email.mail_to == "nobody@nobody":
  #@  assert.fail("alertmanager.email.mail_to is missing or invalid")
  #@ end
  #@ if len(data.values.alertmanager.email.password) == 0 or data.values.alertmanager.email.password == "password":
  #@  assert.fail("alertmanager.email.password is missing or invalid")
  #@ end
  #@ if len(data.values.alertmanager.email.host) == 0:
  #@  assert.fail("alertmanager.email.host is missing")
  #@ end
#@ end
#@ if data.values.alertmanager.teams_webhook.enabled:
  #@ if len(data.values.alertmanager.teams_webhook.url) == 0 or data.values.alertmanager.teams_webhook.url == "http://example/deadbeef":
  #@  assert.fail("alertmanager.teams_webhook.url is missing or invalid")
  #@ end
#@ end
---
apiVersion: v1
kind: Secret
metadata:
  name: prometheus-alertmanager
  namespace: prometheus
  labels: #@ labels("alertmanager")
  annotations:
    kapp.k14s.io/versioned: ""
type: Opaque
#@yaml/text-templated-strings
stringData:
  alertmanager.yml: |
    global:
      resolve_timeout: 5m
    receivers:
    - name: notifications
      (@ if data.values.alertmanager.email.enabled: @)
      email_configs:
      - to: '(@= data.values.alertmanager.email.mail_to @)'
        from: '(@= data.values.alertmanager.email.mail_from @)'
        smarthost: '(@= data.values.alertmanager.email.host @)'
        auth_username: '(@= data.values.alertmanager.email.mail_from @)'
        auth_identity: '(@= data.values.alertmanager.email.mail_from @)'
        auth_password: '(@= data.values.alertmanager.email.password @)'
        send_resolved: false
      (@ end @)
      (@ if data.values.alertmanager.teams_webhook.enabled: @)
      webhook_configs:
      - url: http://prometheus-msteams.prometheus.svc.cluster.local:2000/msteams
        send_resolved: false
      (@ end @)
    route:
      group_interval: 10m
      group_wait: 1m
      group_by: [alertname, job]
      receiver: notifications
      repeat_interval: 12h
