#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")
#@ load("@ytt:overlay", "overlay")
#@ load("_ytt.lib.yml", "labels")

#@ if len(data.values.secrets.grafana.username) == 0 or data.values.secrets.grafana.username == "username":
#@  assert.fail("secrets.grafana.username is missing or invalid")
#@ end
#@ if len(data.values.secrets.grafana.password) == 0 or data.values.secrets.grafana.password == "password":
#@  assert.fail("secrets.grafana.password is missing or invalid")
#@ end
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-credentials
  namespace: grafana
  labels: #@ labels()
  annotations:
    kapp.k14s.io/versioned: ""
type: Opaque
stringData:
  admin-user: #@ data.values.secrets.grafana.username
  admin-password: #@ data.values.secrets.grafana.password

#@ if len(data.values.secrets.grafana.db_password) == 0 or data.values.secrets.grafana.db_password == "password":
#@  assert.fail("secrets.grafana.db_password is missing or invalid")
#@ end
#@overlay/match by=overlay.subset({"kind":"ConfigMap", "metadata":{"name":"grafana"}}), expects=1
---
data:
  #@yaml/text-templated-strings
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - access: proxy
      isDefault: true
      name: Prometheus
      type: prometheus
      url: http://prometheus-server.prometheus.svc.cluster.local
    - name: Loki
      type: loki
      url: http://loki.loki.svc.cluster.local:3100
    - name: home-info
      type: postgres
      url: postgres.postgres.svc.cluster.local:5432
      user: grafana
      database: home_info
      secureJsonData:
        password: "(@= data.values.secrets.grafana.db_password @)"
      jsonData:
        sslmode: "disable"
        maxOpenConns: 5
        maxIdleConns: 2
        postgresVersion: 1200
