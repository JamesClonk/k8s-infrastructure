apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: loki
    chart: promtail-0.25.1
    heritage: Helm
    release: promtail
  name: promtail-loki
  namespace: loki
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-loki
  namespace: loki
  labels:
    app: loki
    chart: promtail-0.25.1
    release: promtail
    heritage: Helm
data:
  promtail.yaml: |
    client:
      backoff_config:
        max_period: 5m
        max_retries: 10
        min_period: 500ms
      batchsize: 1048576
      batchwait: 1s
      external_labels: {}
      timeout: 10s
    positions:
      filename: /run/promtail/positions.yaml
    server:
      http_listen_port: 3101
    target_config:
      sync_period: 10s
    scrape_configs:
    - job_name: kubernetes-pods-name
      pipeline_stages:
        - docker: {}
        - match:
            selector: '{app=~"backman|home-info|irvisualizer|ircollector|jcio"} |~ "panic"'
            stages:
            - metrics:
                app_panic_total:
                  config:
                    action: inc
                    match_all: true
                  description: Total app panics
                  type: Counter
        - match:
            selector: '{app=~"home-info|irvisualizer|ircollector|jcio"} |~ "error"'
            stages:
            - metrics:
                app_error_total:
                  config:
                    action: inc
                    match_all: true
                  description: Total app errors
                  type: Counter
        - match:
            selector: '{namespace="repo-mirrorer"} |~ "failed to push"'
            stages:
            - metrics:
                repo_mirrorer_failed_push:
                  config:
                    action: inc
                    match_all: true
                  description: Total repo-mirrorer failed pushes
                  type: Counter
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_name
        target_label: __service__
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - action: drop
        regex: ''
        source_labels:
        - __service__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __service__
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__
    - job_name: kubernetes-pods-app
      pipeline_stages:
        - docker: {}
        - match:
            selector: '{app=~"backman|home-info|irvisualizer|ircollector|jcio"} |~ "panic"'
            stages:
            - metrics:
                app_panic_total:
                  config:
                    action: inc
                    match_all: true
                  description: Total app panics
                  type: Counter
        - match:
            selector: '{app=~"home-info|irvisualizer|ircollector|jcio"} |~ "error"'
            stages:
            - metrics:
                app_error_total:
                  config:
                    action: inc
                    match_all: true
                  description: Total app errors
                  type: Counter
        - match:
            selector: '{namespace="repo-mirrorer"} |~ "failed to push"'
            stages:
            - metrics:
                repo_mirrorer_failed_push:
                  config:
                    action: inc
                    match_all: true
                  description: Total repo-mirrorer failed pushes
                  type: Counter
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: drop
        regex: .+
        source_labels:
        - __meta_kubernetes_pod_label_name
      - source_labels:
        - __meta_kubernetes_pod_label_app
        target_label: __service__
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - action: drop
        regex: ''
        source_labels:
        - __service__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __service__
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__
    - job_name: kubernetes-pods-direct-controllers
      pipeline_stages:
        - docker: {}
        - match:
            selector: '{app=~"backman|home-info|irvisualizer|ircollector|jcio"} |~ "panic"'
            stages:
            - metrics:
                app_panic_total:
                  config:
                    action: inc
                    match_all: true
                  description: Total app panics
                  type: Counter
        - match:
            selector: '{app=~"home-info|irvisualizer|ircollector|jcio"} |~ "error"'
            stages:
            - metrics:
                app_error_total:
                  config:
                    action: inc
                    match_all: true
                  description: Total app errors
                  type: Counter
        - match:
            selector: '{namespace="repo-mirrorer"} |~ "failed to push"'
            stages:
            - metrics:
                repo_mirrorer_failed_push:
                  config:
                    action: inc
                    match_all: true
                  description: Total repo-mirrorer failed pushes
                  type: Counter
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: drop
        regex: .+
        separator: ''
        source_labels:
        - __meta_kubernetes_pod_label_name
        - __meta_kubernetes_pod_label_app
      - action: drop
        regex: '[0-9a-z-.]+-[0-9a-f]{8,10}'
        source_labels:
        - __meta_kubernetes_pod_controller_name
      - source_labels:
        - __meta_kubernetes_pod_controller_name
        target_label: __service__
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - action: drop
        regex: ''
        source_labels:
        - __service__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __service__
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__
    - job_name: kubernetes-pods-indirect-controller
      pipeline_stages:
        - docker: {}
        - match:
            selector: '{app=~"backman|home-info|irvisualizer|ircollector|jcio"} |~ "panic"'
            stages:
            - metrics:
                app_panic_total:
                  config:
                    action: inc
                    match_all: true
                  description: Total app panics
                  type: Counter
        - match:
            selector: '{app=~"home-info|irvisualizer|ircollector|jcio"} |~ "error"'
            stages:
            - metrics:
                app_error_total:
                  config:
                    action: inc
                    match_all: true
                  description: Total app errors
                  type: Counter
        - match:
            selector: '{namespace="repo-mirrorer"} |~ "failed to push"'
            stages:
            - metrics:
                repo_mirrorer_failed_push:
                  config:
                    action: inc
                    match_all: true
                  description: Total repo-mirrorer failed pushes
                  type: Counter
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: drop
        regex: .+
        separator: ''
        source_labels:
        - __meta_kubernetes_pod_label_name
        - __meta_kubernetes_pod_label_app
      - action: keep
        regex: '[0-9a-z-.]+-[0-9a-f]{8,10}'
        source_labels:
        - __meta_kubernetes_pod_controller_name
      - action: replace
        regex: '([0-9a-z-.]+)-[0-9a-f]{8,10}'
        source_labels:
        - __meta_kubernetes_pod_controller_name
        target_label: __service__
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - action: drop
        regex: ''
        source_labels:
        - __service__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __service__
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__
    - job_name: kubernetes-pods-static
      pipeline_stages:
        - docker: {}
        - match:
            selector: '{app=~"backman|home-info|irvisualizer|ircollector|jcio"} |~ "panic"'
            stages:
            - metrics:
                app_panic_total:
                  config:
                    action: inc
                    match_all: true
                  description: Total app panics
                  type: Counter
        - match:
            selector: '{app=~"home-info|irvisualizer|ircollector|jcio"} |~ "error"'
            stages:
            - metrics:
                app_error_total:
                  config:
                    action: inc
                    match_all: true
                  description: Total app errors
                  type: Counter
        - match:
            selector: '{namespace="repo-mirrorer"} |~ "failed to push"'
            stages:
            - metrics:
                repo_mirrorer_failed_push:
                  config:
                    action: inc
                    match_all: true
                  description: Total repo-mirrorer failed pushes
                  type: Counter
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: drop
        regex: ''
        source_labels:
        - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_label_component
        target_label: __service__
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - action: drop
        regex: ''
        source_labels:
        - __service__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __service__
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
        - __meta_kubernetes_pod_container_name
        target_label: __path__
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app: loki
    chart: promtail-0.25.1
    release: promtail
    heritage: Helm
  name: promtail-loki-clusterrole
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs:
  - get
  - watch
  - list
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: promtail-loki-clusterrolebinding
  labels:
    app: loki
    chart: promtail-0.25.1
    release: promtail
    heritage: Helm
subjects:
- kind: ServiceAccount
  name: promtail-loki
  namespace: loki
roleRef:
  kind: ClusterRole
  name: promtail-loki-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: promtail-loki
  namespace: loki
  labels:
    app: loki
    chart: promtail-0.25.1
    heritage: Helm
    release: promtail
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: promtail-loki
  namespace: loki
  labels:
    app: loki
    chart: promtail-0.25.1
    heritage: Helm
    release: promtail
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: promtail-loki
subjects:
- kind: ServiceAccount
  name: promtail-loki
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail-loki
  namespace: loki
  labels:
    app: loki
    chart: promtail-0.25.1
    release: promtail
    heritage: Helm
  annotations: {}
spec:
  selector:
    matchLabels:
      app: loki
      release: promtail
  updateStrategy: {}
  template:
    metadata:
      labels:
        app: loki
        release: promtail
      annotations:
        checksum/config: 6548cc64009667e40dd6d26b70fff62803d9530c4e296ebb9115dad56c450355
        prometheus.io/port: http-metrics
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: promtail-loki
      containers:
      - name: promtail
        image: grafana/promtail:1.6.0
        imagePullPolicy: IfNotPresent
        args:
        - -config.file=/etc/promtail/promtail.yaml
        - -client.url=http://loki:3100/loki/api/v1/push
        volumeMounts:
        - name: config
          mountPath: /etc/promtail
        - name: run
          mountPath: /run/promtail
        - mountPath: /var/lib/docker/containers
          name: docker
          readOnly: true
        - mountPath: /var/log/pods
          name: pods
          readOnly: true
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - containerPort: 3101
          name: http-metrics
        securityContext:
          readOnlyRootFilesystem: true
          runAsGroup: 0
          runAsUser: 0
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 150m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
      nodeSelector: {}
      affinity: {}
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - name: config
        configMap:
          name: promtail-loki
      - name: run
        hostPath:
          path: /run/promtail
      - hostPath:
          path: /var/lib/docker/containers
        name: docker
      - hostPath:
          path: /var/log/pods
        name: pods
