#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")
#@ load("@ytt:overlay", "overlay")

#@ if data.values.dashboard.kubeconfig_enabled == "true":
---
apiVersion: v1
kind: Secret
metadata:
  name: kubernetes-dashboard-kubeconfig
  namespace: kubernetes-dashboard
  labels:
    k8s-app: kubernetes-dashboard
  annotations:
    kapp.k14s.io/versioned: ""
type: Opaque
stringData:
  #@ if data.values.dashboard.kubeconfig_enabled == "true" and len(data.values.dashboard.kubeconfig) == 0:
  #@  assert.fail("dashboard.kubeconfig cannot be empty")
  #@ end
  kubeconfig.yml: #@ data.values.dashboard.kubeconfig

#@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"name":"kubernetes-dashboard"}}), expects=1
---
spec:
  template:
    spec:
      containers:
      #@overlay/match by=overlay.subset({"name":"kubernetes-dashboard"}), expects=1
      - name: kubernetes-dashboard
        #@overlay/replace
        args:
        - --auto-generate-certificates
        - --namespace=kubernetes-dashboard
        #@ if data.values.dashboard.kubeconfig_enabled == "true":
        - --enable-insecure-login=true
        - --enable-skip-login=true
        - --kubeconfig=/var/dashboard/kubeconfig.yml
        #@ end
        volumeMounts:
        #@overlay/append
        - name: kubeconfig
          mountPath: /var/dashboard/kubeconfig.yml
          subPath: kubeconfig.yml
      volumes:
      #@overlay/append
      - name: kubeconfig
        secret:
          secretName: kubernetes-dashboard-kubeconfig
#@ end
