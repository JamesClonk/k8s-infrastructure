#@ load("@ytt:assert", "assert")
#@ load("@ytt:data", "data")

#@ if len(data.values.lets_encrypt.prod_key) > 0 and data.values.lets_encrypt.prod_key != "NONE":
---
apiVersion: v1
kind: Secret
metadata:
  name: letsencrypt-prod
  namespace: cert-manager
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
type: Opaque
data:
  tls.key: #@ data.values.lets_encrypt.prod_key
#@ end

---
apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: cert-manager
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
spec:
  acme:
    # The ACME server URL
    server: https://acme-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    #@ if len(data.values.lets_encrypt.email) == 0:
    #@  assert.fail("lets_encrypt.email be empty")
    #@ end
    email: #@ data.values.lets_encrypt.email
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-prod
    # Enable the HTTP-01 challenge provider
    solvers:
    - http01:
        ingress:
          class: nginx
